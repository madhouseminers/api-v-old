enum Status {
    ONLINE
    OFFLINE
    STARTING
    STOPPING
    UNKNOWN
}

enum ServerCategory {
    VANILLA
    MODDED
}

type Server {
    id: ID
    name: String
    playercount: Int
    version: String
    status: Status
    category: ServerCategory
}

type ChatMessage {
    id: ID
    server: String
    sender: String
    sent: String
    message: String
}

type Whitelist {
    id: ID,
    displayName: String!,
    dob: String!,
    status: String!,
    whereHeard: String!,
    moddedExperience: String!,
    knownMembers: String!,
    interestedServers: String!,
    aboutUser: String!
    submitted: String
    minecraftuuid: String
}

type Query {
    servers(category: String): [Server]
    chat(limit: Int = 10): [ChatMessage]
    profile: User
    whitelist(id: ID): Whitelist
    whitelists: [Whitelist]
    validateResetToken(token: String!): String
}

type WhitelistStatus {
    status: String
    feedback: String
}

type User {
    id: String
    email: String
    displayName: String
    reviewer: Boolean
    whitelist: WhitelistStatus
}

type LoginPayload {
    user: User
    token: String
}

type Mutation {
    authenticate(email: String!, password: String!): LoginPayload
    register(
        email: String!,
        password: String!,
        confPassword: String!,
        minecraftName: String!,
        dob: String!,
        whereHeard: String!,
        moddedExperience: String!,
        knownMembers: String!,
        interestedServers: String!,
        aboutUser: String!
    ): LoginPayload
    updateWhitelist(
        id: ID,
        whereHeard: String!,
        moddedExperience: String!,
        knownMembers: String!,
        interestedServers: String!,
        aboutUser: String!
    ): Whitelist
    reviewWhitelist(
        id: ID,
        outcome: String!,
        feedback: String!
    ): Whitelist
    resetPassword(email: String!): Boolean
    updatePassword(token: String!, password: String!, confirmPassword: String!): LoginPayload
}

type Subscription {
    serverUpdated(server: ID): Server
    whitelistUpdated: Whitelist
}
